[
    {
        "id": "476a12a01ee6b415",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f44abf5a8dec2d0a",
        "type": "tab",
        "label": "File Explore",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "675b79776999a17a",
        "type": "tab",
        "label": "Detect",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7a58303c52d57c05",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c4429803f3685c6",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "26bb56a265ba606e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "vikings.hopto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8290a3e457ebf20f",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "48418b79.0f5834",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dfb4a60f.d788f8",
        "type": "ui_group",
        "name": "Data Export",
        "tab": "48418b79.0f5834",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e8d3a60cfc58017f",
        "type": "ui_group",
        "name": "Log",
        "tab": "48418b79.0f5834",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "File Manager",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "387c58da45e62fbf",
        "type": "ui_group",
        "name": "File Manager",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ebb1ed1c.5ebe2",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "98e7818a12554714",
        "type": "ui_group",
        "name": "TEMPERATURE",
        "tab": "ebb1ed1c.5ebe2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1dd773a15ff4d497",
        "type": "ui_group",
        "name": "HUMIDITY",
        "tab": "ebb1ed1c.5ebe2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6e0394e77fa6ddc6",
        "type": "ui_group",
        "name": "POWER",
        "tab": "ebb1ed1c.5ebe2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "95bf4b7585a836fb",
        "type": "ui_group",
        "name": "LOG",
        "tab": "ebb1ed1c.5ebe2",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "80d4c61b8d7e332f",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "b63d1f91.68095",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "330c74fd56fb8a42",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "b63d1f91.68095",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "81a1a0f86dbd7ea7",
        "type": "ui_group",
        "name": "Power",
        "tab": "b63d1f91.68095",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75e33f4ea0c21c61",
        "type": "ui_spacer",
        "z": "f44abf5a8dec2d0a",
        "name": "spacer",
        "group": "387c58da45e62fbf",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "4f2da75b4445f277",
        "type": "ui_group",
        "name": "STATUS",
        "tab": "ebb1ed1c.5ebe2",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2223d35ff079f419",
        "type": "ui_group",
        "name": "INDOOR",
        "tab": "ebb1ed1c.5ebe2",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4cee268e181d4dbd",
        "type": "ui_group",
        "name": "ENERGY",
        "tab": "ebb1ed1c.5ebe2",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a8efce5e22380e30",
        "type": "ui_group",
        "name": "Energy",
        "tab": "b63d1f91.68095",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2705407d6eaae13c",
        "type": "ui_tab",
        "name": "Setting",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f5695f99a4099ee6",
        "type": "ui_group",
        "name": "Add user",
        "tab": "2705407d6eaae13c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "29d197dfa34e9696",
        "type": "ui_group",
        "name": "Test",
        "tab": "48418b79.0f5834",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d433431f2eeffbef",
        "type": "ui_group",
        "name": "OUTDOOR",
        "tab": "ebb1ed1c.5ebe2",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eed4f51a8356e002",
        "type": "mqtt-broker",
        "name": "",
        "broker": "hub.selex.vn",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "49cddb838fab4043",
        "type": "ui_tab",
        "name": "Thinh",
        "icon": "dashboard",
        "order": 5,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "31bd30d4face3e7e",
        "type": "ui_group",
        "name": "Test",
        "tab": "49cddb838fab4043",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7dd80de0bea1a1f",
        "type": "ui_group",
        "name": "Delete User",
        "tab": "2705407d6eaae13c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d7c576bae3f1d2a0",
        "type": "ui_group",
        "name": "Time to update",
        "tab": "2705407d6eaae13c",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3f3de6d2b3134f6c",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "split temperature",
        "func": "msg.payload = parseFloat((flow.get(\"current_temperature\")).toFixed(2));\nmsg.topic = \"temperature\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "4218a3b8d104ba70"
            ]
        ]
    },
    {
        "id": "336f53f2d20d46db",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "split humidity",
        "func": "msg.payload = parseFloat((flow.get(\"current_humidity\")).toFixed(2));\nmsg.topic = \"humidity\";\nmsg.value = msg.payload.toString() + ' %';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 420,
        "wires": [
            [
                "b147accc1b658902"
            ]
        ]
    },
    {
        "id": "79da4b005c701d13",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "prepare power data",
        "func": "msg.payload = parseFloat(msg.current_sum_power.toFixed(2));\nmsg.topic = \"power\";\nmsg.value = msg.payload.toString() + 'mW'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            [
                "c38daf0fbf617d4c",
                "2e551fe839020d30"
            ]
        ]
    },
    {
        "id": "d90021d3259de9c8",
        "type": "csv",
        "z": "476a12a01ee6b415",
        "name": "Create csv row",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "timeStamp, temperature, humidity, power",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 780,
        "y": 80,
        "wires": [
            [
                "7815533e56dc96ec"
            ]
        ]
    },
    {
        "id": "7815533e56dc96ec",
        "type": "file",
        "z": "476a12a01ee6b415",
        "name": "",
        "filename": "fileName",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 960,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a206376c99f2c89f",
        "type": "file",
        "z": "476a12a01ee6b415",
        "name": "new file at the start of new day",
        "filename": "fileName",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 930,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "53138d25bc81fc11",
        "type": "csv",
        "z": "476a12a01ee6b415",
        "name": "Create csv header",
        "sep": ",",
        "hdrin": true,
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "timeStamp, temperature, humidity, power",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 630,
        "y": 20,
        "wires": [
            [
                "a206376c99f2c89f"
            ]
        ]
    },
    {
        "id": "b4fa03ef2e102560",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Create new file",
        "func": "var currentDate = new Date();\nvar data = {};\nvar day = currentDate.getDate() ;\nvar month = currentDate.getMonth() +1; // Tháng bắt đầu từ 0, cần cộng thêm 1\nvar year = currentDate.getFullYear();\n\n// Chuyển đổi thành chuỗi và định dạng ngày_tháng_năm\nvar fileName = '/home/viet/IoT_data/' + day.toString().padStart(2, '0') + '_' + month.toString().padStart(2, '0') + '_' + year + '.csv';\nmsg.fileName = fileName;\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 20,
        "wires": [
            [
                "53138d25bc81fc11"
            ]
        ]
    },
    {
        "id": "193ffd7417c4216d",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 70,
        "y": 20,
        "wires": [
            [
                "b4fa03ef2e102560",
                "1c899ea554bc3d24"
            ]
        ]
    },
    {
        "id": "4218a3b8d104ba70",
        "type": "ui_gauge",
        "z": "476a12a01ee6b415",
        "name": "temperature",
        "group": "98e7818a12554714",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "",
        "label": "℃",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "gauge",
        "x": 1190,
        "y": 460,
        "wires": []
    },
    {
        "id": "ecfb8f866152ec91",
        "type": "ui_template",
        "z": "476a12a01ee6b415",
        "group": "98e7818a12554714",
        "name": "UI",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    body{\n    background-color:#eef5f9 !important;}\n    .gauge tspan{\n    font-size: 15px;\n    color:green !important;}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1530,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b147accc1b658902",
        "type": "ui_chart",
        "z": "476a12a01ee6b415",
        "name": "Humidity",
        "group": "1dd773a15ff4d497",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "{{msg.value}}",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1200,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c38daf0fbf617d4c",
        "type": "ui_chart",
        "z": "476a12a01ee6b415",
        "name": "power",
        "group": "6e0394e77fa6ddc6",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "{{msg.value}}",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "41efe3926dda4aed",
        "type": "http response",
        "z": "476a12a01ee6b415",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b80e6637e99c673f",
        "type": "file in",
        "z": "476a12a01ee6b415",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 660,
        "y": 1340,
        "wires": [
            [
                "41efe3926dda4aed"
            ]
        ]
    },
    {
        "id": "b79e74c1de270ad6",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1420,
        "wires": [
            [
                "41efe3926dda4aed"
            ]
        ]
    },
    {
        "id": "11ae1195b6d1162d",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Set base path",
        "func": "var basePath = \"/home/viet/IoT_data/\";\nvar filename = msg.req.params.fn;\n\n\nif (filename.includes(\"..\\\\\")) {\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} else if (filename.includes(\"../\")) {\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n}\n//TODO: add more checks\n\nmsg.filename = basePath + filename;\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1340,
        "wires": [
            [
                "b80e6637e99c673f"
            ]
        ]
    },
    {
        "id": "549f0884ad355a05",
        "type": "catch",
        "z": "476a12a01ee6b415",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 300,
        "y": 1420,
        "wires": [
            [
                "b79e74c1de270ad6",
                "a2866d2be934b73b"
            ]
        ]
    },
    {
        "id": "4945b4c3e6cab07e",
        "type": "http in",
        "z": "476a12a01ee6b415",
        "name": "",
        "url": "/downloads/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 1340,
        "wires": [
            [
                "11ae1195b6d1162d"
            ]
        ]
    },
    {
        "id": "a2866d2be934b73b",
        "type": "debug",
        "z": "476a12a01ee6b415",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1400,
        "wires": []
    },
    {
        "id": "557ba6736e6afcb2",
        "type": "ui_template",
        "z": "476a12a01ee6b415",
        "group": "95bf4b7585a836fb",
        "name": "Download area",
        "order": 1,
        "width": 6,
        "height": 3,
        "format": "<!DOCTYPE html>\n<html>\n\n<head>\n  <style>\n    .download {\n      font-family: BlinkMacSystemFont, sans-serif;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      margin: 0 30px;\n      max-width: 350px;\n      background-color: #ffffff;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      padding: 20px;\n    }\n\n    .Picker {\n      display: flex;\n      background-color: #eeeeee;\n      border-radius: 8px;\n      overflow: hidden;\n      margin-bottom: 5px;\n    }\n\n    .datePicker {\n      flex: 1;\n      height: 30px;\n      padding: 0 10px;\n      border: none;\n      font-size: 16px;\n      color: blueviolet;\n    }\n\n    .my-button {\n      margin-top: 5px;\n      padding: 10px 20px;\n      width: 80%;\n      background-color: #0094ce;\n      color: white;\n      border: none;\n      display:flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 4px;\n      transition: background-color 0.3s ease;\n    }\n\n    .my-button:hover {\n      background-color: #00aaed;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"download\">\n    <div class=\"Picker\">\n      <input type=\"date\" class=\"datePicker\">\n    </div>\n    <button class=\"my-button\" id=\"myButton\">DOWNLOAD</button>\n  </div>\n\n  <script>\n    const Day = document.querySelector('.datePicker');\n        var selectedDate;\n        var fileName;\n        var link;\n\n        Day.addEventListener('change', function() {\n            var dateObject = new Date(Day.value);\n            var day = dateObject.getDate();\n            var month = dateObject.getMonth() + 1;\n            var year = dateObject.getFullYear();\n            selectedDate = day.toString().padStart(2, '0') + '_' + month.toString().padStart(2, '0') + '_' + year;\n            fileName = selectedDate + '.csv';\n            link = '/downloads/' + fileName;\n        });\n\n        var button = document.getElementById(\"myButton\");\n        button.addEventListener(\"click\", function() {\n            console.log(link);\n            window.location.href =link;\n        });\n  </script>\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1520,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6f0805747b18e0bd",
        "type": "ui_button",
        "z": "476a12a01ee6b415",
        "name": "",
        "group": "6e0394e77fa6ddc6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Do you want clear this graph?",
        "payloadType": "str",
        "topic": "Delete confirmation",
        "topicType": "str",
        "x": 590,
        "y": 120,
        "wires": [
            [
                "44af62410a1e0d46"
            ]
        ]
    },
    {
        "id": "44af62410a1e0d46",
        "type": "ui_toast",
        "z": "476a12a01ee6b415",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 120,
        "wires": [
            [
                "0447b02cc4aade46"
            ]
        ]
    },
    {
        "id": "0447b02cc4aade46",
        "type": "switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 120,
        "wires": [
            [
                "cd3629f45e09c19b"
            ]
        ]
    },
    {
        "id": "cd3629f45e09c19b",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 7",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "c38daf0fbf617d4c"
            ]
        ]
    },
    {
        "id": "0702877858f17398",
        "type": "ui_button",
        "z": "476a12a01ee6b415",
        "name": "",
        "group": "1dd773a15ff4d497",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Do you want clear this graph?",
        "payloadType": "str",
        "topic": "Delete confirmation",
        "topicType": "str",
        "x": 590,
        "y": 380,
        "wires": [
            [
                "5c12f661fe522b13"
            ]
        ]
    },
    {
        "id": "5c12f661fe522b13",
        "type": "ui_toast",
        "z": "476a12a01ee6b415",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 750,
        "y": 380,
        "wires": [
            [
                "27a0696018aa68a3"
            ]
        ]
    },
    {
        "id": "27a0696018aa68a3",
        "type": "switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 380,
        "wires": [
            [
                "b19f2792ef04a426"
            ]
        ]
    },
    {
        "id": "b19f2792ef04a426",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 8",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 380,
        "wires": [
            [
                "b147accc1b658902"
            ]
        ]
    },
    {
        "id": "d8dbd061ca4924fb",
        "type": "ui_form",
        "z": "476a12a01ee6b415",
        "name": "Time to update",
        "label": "",
        "group": "d7c576bae3f1d2a0",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Time to update",
                "value": "timeToUpdate",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "timeToUpdate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 340,
        "y": 1260,
        "wires": [
            [
                "d1580ba04a88b242",
                "f10c73831cf2b4ab"
            ]
        ]
    },
    {
        "id": "f10c73831cf2b4ab",
        "type": "json",
        "z": "476a12a01ee6b415",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 550,
        "y": 1260,
        "wires": [
            [
                "3d0359ba96a868fc"
            ]
        ]
    },
    {
        "id": "3d0359ba96a868fc",
        "type": "mqtt out",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "indoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 750,
        "y": 1260,
        "wires": []
    },
    {
        "id": "aa1feae2bc9c6c94",
        "type": "ui_led",
        "z": "476a12a01ee6b415",
        "order": 3,
        "group": "4f2da75b4445f277",
        "width": "1",
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#504e4e",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "GAS STATUS",
        "x": 1130,
        "y": 560,
        "wires": []
    },
    {
        "id": "d40fc52f438ce7d5",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 9",
        "func": "if (msg.payload.gas != 0){\n    msg.payload = true;\n    msg.notification = \"GAS LEAK DETECTED\";\n} else {\n    msg.payload = false;\n    msg.notification = \"No gas leak detected\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "a23d2e724fd30093",
                "50c80cdac1091ce9"
            ]
        ]
    },
    {
        "id": "50c80cdac1091ce9",
        "type": "trigger",
        "z": "476a12a01ee6b415",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1000",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 880,
        "y": 560,
        "wires": [
            [
                "aa1feae2bc9c6c94"
            ]
        ]
    },
    {
        "id": "a23d2e724fd30093",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "4f2da75b4445f277",
        "order": 2,
        "width": "5",
        "height": 1,
        "name": "GAS STATUS",
        "label": "",
        "format": "{{msg.notification}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 620,
        "wires": []
    },
    {
        "id": "95f6d6cec94401ec",
        "type": "comment",
        "z": "476a12a01ee6b415",
        "name": "Ý tưởng",
        "info": "Với vẽ biểu đồ đồ realtime thì dùng node power monitor\nVỚi vẽ biểu đồ theo ngày,tính tổng theo giờ,  (if phút trước > phút sau && giây trước < giây sau): push giá trị tổng vào mảng",
        "x": 920,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a401ccdaab7de69e",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "get energy",
        "func": "    msg.payload = parseFloat((flow.get(\"energy\")/1000).toFixed(2));\n    var sum_energy = flow.get(\"sum_energy\");\n    msg.sum_energy = 'Total: ' + (sum_energy/1000).toFixed(2) + ' Wh ';\n    msg.topic = flow.get(\"hours\")+1;\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "51ac284bebe34a22",
                "34525a03125290eb"
            ]
        ]
    },
    {
        "id": "097fda4083838b2f",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "d3fb0e6c5166c44e",
                "e5f8de78c039f8a4"
            ]
        ]
    },
    {
        "id": "d3fb0e6c5166c44e",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 15",
        "func": "var currentTime = new Date();\n\n// Lấy giờ, phút, giây\nmsg.hours = currentTime.getHours();\nmsg.minutes = currentTime.getMinutes();\nmsg.seconds = currentTime.getSeconds();\nmsg.payload = msg.hours.toString().padStart(2, '0') + ' : ' + msg.minutes.toString().padStart(2, '0') + ' : ' + msg.seconds.toString().padStart(2, '0');\nmsg.days = currentTime.getDate();\nmsg.months = currentTime.getMonth() + 1; // Tháng bắt đầu từ 0, cần cộng thêm 1\nmsg.years = currentTime.getFullYear();\nmsg.topic = msg.days.toString().padStart(2, '0') + ' / ' + msg.months.toString().padStart(2, '0') + ' / ' + msg.years.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 70,
        "y": 500,
        "wires": [
            [
                "ec09c4429c033963",
                "4f6813cb58811e5f"
            ]
        ]
    },
    {
        "id": "ec09c4429c033963",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "Clock",
        "rules": [
            {
                "t": "set",
                "p": "hours",
                "pt": "flow",
                "to": "hours",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "minutes",
                "pt": "flow",
                "to": "minutes",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "seconds",
                "pt": "flow",
                "to": "seconds",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "days",
                "pt": "flow",
                "to": "days",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "months",
                "pt": "flow",
                "to": "months",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "years",
                "pt": "flow",
                "to": "years",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "51ac284bebe34a22",
        "type": "ui_chart",
        "z": "476a12a01ee6b415",
        "name": "energy",
        "group": "4cee268e181d4dbd",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "{{msg.sum_energy}}",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1290,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9c42b0273ef044a2",
        "type": "ui_button",
        "z": "476a12a01ee6b415",
        "name": "",
        "group": "4cee268e181d4dbd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Do you want clear this graph?",
        "payloadType": "str",
        "topic": "Delete confirmation",
        "topicType": "str",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "a9f8a9097118e830"
            ]
        ]
    },
    {
        "id": "a9f8a9097118e830",
        "type": "ui_toast",
        "z": "476a12a01ee6b415",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 770,
        "y": 300,
        "wires": [
            [
                "31fdae4e5826256d"
            ]
        ]
    },
    {
        "id": "31fdae4e5826256d",
        "type": "switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 300,
        "wires": [
            [
                "dd319118ec38bed7"
            ]
        ]
    },
    {
        "id": "dd319118ec38bed7",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "reset energy chart",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 300,
        "wires": [
            [
                "51ac284bebe34a22"
            ]
        ]
    },
    {
        "id": "1c899ea554bc3d24",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sum_energy",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2e551fe839020d30",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Calculate energy",
        "func": "var sum = msg.payload * (flow.get(\"timeToUpdate\")/1000) / 3600;\nmsg.sum = sum + flow.get(\"sum_energy\");\nmsg.payload = sum + flow.get(\"energy\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "37277a90685732cc"
            ]
        ]
    },
    {
        "id": "37277a90685732cc",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "energy",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "sum_energy",
                "pt": "flow",
                "to": "sum",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cf2d4538bf8d9acb",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 810,
        "y": 260,
        "wires": [
            [
                "a401ccdaab7de69e"
            ]
        ]
    },
    {
        "id": "0cd221ba089e1c69",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 340,
        "wires": [
            [
                "dd319118ec38bed7"
            ]
        ]
    },
    {
        "id": "34525a03125290eb",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "reset energy every hour",
        "func": "if(flow.get(\"minutes\") > 58 && flow.get(\"seconds\") >56){\n    flow.set(\"energy\", 0);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "094b0c56701f89dc",
        "type": "ui_switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "label": "BEDROOM 1",
        "tooltip": "",
        "group": "2223d35ff079f419",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON_ceilingLight",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF_ceilingLight",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 730,
        "y": 680,
        "wires": [
            [
                "2d6d9ced9abab94b",
                "cefc5807d2ecae1e",
                "c89fa3680f24d9ce"
            ]
        ]
    },
    {
        "id": "fd190fb2ad492f49",
        "type": "ui_switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "label": "BEDROOM 2",
        "tooltip": "",
        "group": "2223d35ff079f419",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON_wallLight",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF_wallLight",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 690,
        "y": 780,
        "wires": [
            [
                "d89705ea9e4eed52",
                "72e21795980e97e3",
                "c89fa3680f24d9ce"
            ]
        ]
    },
    {
        "id": "5c6a64e73ea8bf27",
        "type": "mqtt out",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 950,
        "y": 760,
        "wires": []
    },
    {
        "id": "fb0b5eb0869e90c8",
        "type": "ui_form",
        "z": "476a12a01ee6b415",
        "name": "",
        "label": "Light Schedule",
        "group": "d433431f2eeffbef",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "On at",
                "value": "Light3_OnTime",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "Off at",
                "value": "Light3_OffTime",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Light3_OnTime": "",
            "Light3_OffTime": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 640,
        "y": 880,
        "wires": [
            [
                "3ed65671e76685f4"
            ]
        ]
    },
    {
        "id": "dca76f3e9f4ad75d",
        "type": "ui_button",
        "z": "476a12a01ee6b415",
        "name": "",
        "group": "98e7818a12554714",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Do you want clear this graph?",
        "payloadType": "str",
        "topic": "Delete confirmation",
        "topicType": "str",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "88d50e10655d330f"
            ]
        ]
    },
    {
        "id": "88d50e10655d330f",
        "type": "ui_toast",
        "z": "476a12a01ee6b415",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 500,
        "wires": [
            [
                "afa9c9e39c6a6ed6"
            ]
        ]
    },
    {
        "id": "afa9c9e39c6a6ed6",
        "type": "switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 500,
        "wires": [
            [
                "fe74236c49db6bb3"
            ]
        ]
    },
    {
        "id": "fe74236c49db6bb3",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 18",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 500,
        "wires": [
            [
                "4218a3b8d104ba70"
            ]
        ]
    },
    {
        "id": "e5f8de78c039f8a4",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "process time schedule",
        "func": "const cur_hours = flow.get(\"hours\");\nconst cur_minutes = flow.get(\"minutes\");\nconst now = cur_hours * 60 + cur_minutes;\nconst OnTime = flow.get(\"OnTime\");\nconst OffTime = flow.get(\"OffTime\");\nconst yardLightStatus = flow.get(\"yardLightStatus\");\nvar status;\nif(OnTime < OffTime){\n    if ((now >= OnTime) && (now < OffTime) ) {\n        status = true;\n    } else {\n        status = false;\n    }\n}\nelse{\n    if (now >= OnTime || now < OffTime) {\n        status = true;\n    } else {\n        status = false;\n    }\n}\nif(status != yardLightStatus){\n    flow.set(\"yardLightStatus\", status);\n    msg.payload = status;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 660,
        "wires": [
            [
                "5487d2544ad04b75",
                "da0509f968fddb92"
            ]
        ]
    },
    {
        "id": "5487d2544ad04b75",
        "type": "ui_led",
        "z": "476a12a01ee6b415",
        "order": 7,
        "group": "d433431f2eeffbef",
        "width": "1",
        "height": "1",
        "label": "",
        "labelPlacement": "right",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#4c4848",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Đèn sân",
        "x": 500,
        "y": 660,
        "wires": []
    },
    {
        "id": "2d25fbdeac8e8b22",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Time converter",
        "func": "const OnTime = msg.payload.Light3_OnTime.hours * 60 + msg.payload.Light3_OnTime.minutes;\nconst OffTime = msg.payload.Light3_OffTime.hours * 60 + msg.payload.Light3_OffTime.minutes;\nmsg.OnTime = OnTime;\nmsg.OffTime = OffTime;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 880,
        "wires": [
            [
                "b5c1bbde94705130"
            ]
        ]
    },
    {
        "id": "b5c1bbde94705130",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "OnTime",
                "pt": "flow",
                "to": "OnTime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "OffTime",
                "pt": "flow",
                "to": "OffTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "2d6d9ced9abab94b",
        "type": "ui_led",
        "z": "476a12a01ee6b415",
        "order": 2,
        "group": "2223d35ff079f419",
        "width": "2",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#4c4848",
                "value": "OFF_ceilingLight",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "ON_ceilingLight",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Đèn trần",
        "x": 940,
        "y": 680,
        "wires": []
    },
    {
        "id": "d89705ea9e4eed52",
        "type": "ui_led",
        "z": "476a12a01ee6b415",
        "order": 4,
        "group": "2223d35ff079f419",
        "width": "2",
        "height": "1",
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#4c4848",
                "value": "OFF_wallLight",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "ON_wallLight",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Đèn tường",
        "x": 950,
        "y": 800,
        "wires": []
    },
    {
        "id": "5153951ffda1ab9a",
        "type": "mqtt in",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "esp32",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 50,
        "y": 160,
        "wires": [
            [
                "d40fc52f438ce7d5",
                "494831346402dbe1"
            ]
        ]
    },
    {
        "id": "1071078545d88360",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 110,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "06a824fb905259d3",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "init the original status of light",
        "rules": [
            {
                "t": "set",
                "p": "ceilingLightStatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "wallLightStatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "yardLightStatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "da0509f968fddb92",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "yard Light message",
        "func": "if(msg.payload){\n    msg.payload = \"ON_yardLight\";\n} else {\n    msg.payload = \"OFF_yardLight\";\n}\n// msg.topic = \"yardLight\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 740,
        "wires": [
            [
                "5c6a64e73ea8bf27"
            ]
        ]
    },
    {
        "id": "cefc5807d2ecae1e",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Update cellingLightStatus",
        "func": "if (msg.payload == \"ON_ceilingLight\"){\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\nflow.set(\"ceilingLightStatus\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "72e21795980e97e3",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Update wallLightStatus",
        "func": "if (msg.payload == \"ON_wallLight\"){\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\nflow.set(\"wallLightStatus\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "fbc047337e3d8090",
        "type": "mqtt in",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "LightStatus",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 880,
        "wires": [
            [
                "a445caf65bc02864"
            ]
        ]
    },
    {
        "id": "a445caf65bc02864",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 31",
        "func": "var currentCeilingLightStatus;\nvar currentWallLightStatus;\ncurrentCeilingLightStatus = flow.get(\"ceilingLightStatus\");\ncurrentWallLightStatus = flow.get(\"wallLightStatus\");\nif (msg.payload.ceilingLightStatus != currentCeilingLightStatus){\n    currentCeilingLightStatus = msg.payload.ceilingLightStatus;\n}\nif (msg.payload.wallLightStatus != currentWallLightStatus){\n    currentWallLightStatus = msg.payload.wallLightStatus;\n}\nflow.set(\"ceilingLightStatus\", currentCeilingLightStatus);\nflow.set(\"wallLightStatus\", currentWallLightStatus);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 880,
        "wires": [
            [
                "241a83ef962365c2",
                "447af86fee1a84c2"
            ]
        ]
    },
    {
        "id": "241a83ef962365c2",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 32",
        "func": "if (msg.payload.ceilingLightStatus){\n    msg.payload = \"ON_ceilingLight\";\n} else {\n    msg.payload = \"OFF_ceilingLight\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 700,
        "wires": [
            [
                "094b0c56701f89dc"
            ]
        ]
    },
    {
        "id": "447af86fee1a84c2",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 33",
        "func": "if (msg.payload.wallLightStatus){\n    msg.payload = \"ON_wallLight\";\n} else {\n    msg.payload = \"OFF_wallLight\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 840,
        "wires": [
            [
                "fd190fb2ad492f49"
            ]
        ]
    },
    {
        "id": "a7f4c2963a43fcbc",
        "type": "debug",
        "z": "476a12a01ee6b415",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1180,
        "wires": []
    },
    {
        "id": "12b6eadd4a9489ff",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "d433431f2eeffbef",
        "order": 5,
        "width": "1",
        "height": "1",
        "name": "ON",
        "label": "",
        "format": "{{msg.onTime}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#008000",
        "x": 1070,
        "y": 940,
        "wires": []
    },
    {
        "id": "76aa945b05333715",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "d433431f2eeffbef",
        "order": 6,
        "width": "2",
        "height": "1",
        "name": "OFF",
        "label": "",
        "format": "{{msg.offTime}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ff0000",
        "x": 1070,
        "y": 980,
        "wires": []
    },
    {
        "id": "3ed65671e76685f4",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Time extracting",
        "func": "var timeOn = new Date(msg.payload.Light3_OnTime);\nvar timeOnSplitted = {\n    hours: timeOn.getHours(),\n    minutes: timeOn.getMinutes()\n};\nmsg.onTime = timeOnSplitted.hours.toString().padStart(2, '0') + ':' +\n    timeOnSplitted.minutes.toString().padStart(2, '0');\n\nvar timeOff = new Date(msg.payload.Light3_OffTime);\nvar timeOffSplitted = {\n    hours: timeOff.getHours(),\n    minutes: timeOff.getMinutes()\n};\nmsg.offTime = timeOffSplitted.hours.toString().padStart(2, '0') + ':' +\n    timeOffSplitted.minutes.toString().padStart(2, '0');\nmsg.payload.Light3_OnTime = timeOnSplitted;\nmsg.payload.Light3_OffTime = timeOffSplitted;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 880,
        "wires": [
            [
                "2d25fbdeac8e8b22",
                "12b6eadd4a9489ff",
                "76aa945b05333715"
            ]
        ]
    },
    {
        "id": "4f6813cb58811e5f",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "4f2da75b4445f277",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 250,
        "y": 500,
        "wires": []
    },
    {
        "id": "d1580ba04a88b242",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "Update time to update data",
        "rules": [
            {
                "t": "set",
                "p": "timeToUpdate",
                "pt": "flow",
                "to": "payload.timeToUpdate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1180,
        "wires": [
            [
                "a7f4c2963a43fcbc"
            ]
        ]
    },
    {
        "id": "85020ac092047280",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "prepare data to write to the file",
        "func": "if ((flow.get(\"minutes\") % 5 == 0) && (!flow.get(\"dataWrote\"))) {\n    var data = {};\n    var currentTime = new Date();\n\n    // Lấy giờ, phút, giây\n    var hours = flow.get(\"hours\");\n    var minutes = flow.get(\"minutes\");\n    var seconds = flow.get(\"seconds\");\n\n    // Chuyển đổi thành chuỗi dạng HH:mm:ss\n    var timeStamp = hours.toString().padStart(2, '0') + ':' +\n        minutes.toString().padStart(2, '0') + ':' +\n        seconds.toString().padStart(2, '0');\n    var day = flow.get(\"days\");\n    var month = flow.get(\"months\");\n    var year = flow.get(\"years\");\n\n    // Chuyển đổi thành chuỗi và định dạng ngày_tháng_năm\n    msg.fileName = '/home/viet/IoT_data/' + day.toString().padStart(2, '0') + '_' + month.toString().padStart(2, '0') + '_' + year + '.csv';\n    \n    data.timeStamp = timeStamp;\n    data.temperature = parseFloat((flow.get(\"avg_temperature\")).toFixed(2));\n    data.humidity = parseFloat((flow.get(\"avg_humidity\")).toFixed(2));\n    data.power = parseFloat((flow.get(\"avg_sum_power\")).toFixed(2));\n\n    flow.set(\"avg_temperature\", flow.get(\"current_temperature\"));\n    flow.set(\"avg_sum_power\", msg.current_sum_power);\n    flow.set(\"avg_humidity\", flow.get(\"current_humidity\"));\n    msg.payload = data;\n    flow.set(\"dataWrote\", 1);\n    return msg;\n} else {\n    if (flow.get(\"minutes\") % 5 > 0) {\n        flow.set(\"dataWrote\", 0);\n    }\n\n    var avg_temperature = flow.get(\"avg_temperature\");\n    var avg_power = flow.get(\"avg_sum_power\");\n    var avg_humidity = flow.get(\"avg_humidity\");\n    var cycle = 5 * 60 * 1000 / flow.get(\"timeToUpdate\");\n\n    flow.set(\"avg_temperature\", avg_temperature + (flow.get(\"current_temperature\") - avg_temperature) / cycle);\n    flow.set(\"avg_sum_power\", avg_power + (msg.current_sum_power - avg_power) / cycle);\n    flow.set(\"avg_humidity\", avg_humidity + (flow.get(\"current_humidity\") - avg_humidity) / cycle);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 80,
        "wires": [
            [
                "d90021d3259de9c8"
            ]
        ]
    },
    {
        "id": "5ef5540553a7e5e6",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "cec15f723901825f",
        "type": "change",
        "z": "476a12a01ee6b415",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "avg_temperature",
                "pt": "flow",
                "to": "35",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "avg_sum_power",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "avg_humidity",
                "pt": "flow",
                "to": "60",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "timeToUpdate",
                "pt": "flow",
                "to": "3000",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "current_power_indoor",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "current_power_outdoor",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "current_temperature",
                "pt": "flow",
                "to": "35",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "current_humidity",
                "pt": "flow",
                "to": "60",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "494831346402dbe1",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "write indoor data to global variable",
        "func": "flow.set(\"current_temperature\", msg.payload.temperature);\nflow.set(\"current_humidity\", msg.payload.humidity);\nflow.set(\"current_power_indoor\", msg.payload.power);\nflow.set(\"prev_power_indoor\", msg.payload.power)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "0d1ee65834d00285",
        "type": "mqtt in",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "outdoor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 50,
        "y": 420,
        "wires": [
            [
                "5c2b837367c24752"
            ]
        ]
    },
    {
        "id": "5c2b837367c24752",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "write outdoor data to global variable",
        "func": "flow.set(\"current_power_outdoor\", msg.payload.power);\nflow.set(\"prev_power_outdoor\", msg.payload.power);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "073711812a5044d8",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Get sum power",
        "func": "msg.current_indoor_power = flow.get(\"current_power_indoor\");\nif (msg.current_indoor_power < 100){\n    if ((flow.get(\"wallLightStatus\") +\n        flow.get(\"ceilingLightStatus\")) > 0){\n        msg.current_indoor_power = flow.get(\"prev_power_indoor\");\n        flow.set(\"prev_power_indoor\", 0);\n        }\n}\n\nmsg.current_outdoor_power = flow.get(\"current_power_outdoor\");\nif (msg.current_outdoor_power < 100){\n    if (flow.get(\"yardLightStatus\") > 0){\n        msg.current_outdoor_power = flow.get(\"prev_power_outdoor\");\n        flow.set(\"prev_power_outdoor\", 0);\n    }\n}\n\nmsg.current_sum_power = msg.current_indoor_power + msg.current_outdoor_power;\nflow.set(\"current_power_indoor\", 0);\nflow.set(\"current_power_outdoor\", 0);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 240,
        "wires": [
            [
                "79da4b005c701d13",
                "336f53f2d20d46db",
                "3f3de6d2b3134f6c",
                "85020ac092047280"
            ]
        ]
    },
    {
        "id": "d189e55b7eb65819",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "073711812a5044d8"
            ]
        ]
    },
    {
        "id": "341f4a8334cb6343",
        "type": "comment",
        "z": "476a12a01ee6b415",
        "name": "",
        "info": "Nối lại nếu cần reset\n",
        "x": 160,
        "y": 700,
        "wires": []
    },
    {
        "id": "fd5584f8cbcac275",
        "type": "comment",
        "z": "476a12a01ee6b415",
        "name": "",
        "info": "Đưa hiển thị hẹn giờ về 1 dòng ON/OFF, màu khác nhau\nThêm tình trạng cửa mở hay đống, nháy cửa khi phát hiện cửa bị cạy\nHiển thị thêm đèn IR, bố trí theo từng phòng, nút control bên cạnh đèn hiển thị\n",
        "x": 1240,
        "y": 520,
        "wires": []
    },
    {
        "id": "aee96fb97614da45",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "d433431f2eeffbef",
        "order": 4,
        "width": "2",
        "height": "1",
        "name": "",
        "label": "YARD LIGHT",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 980,
        "wires": []
    },
    {
        "id": "b24b27c5ce435f89",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 46",
        "func": "\nif (msg.payload) {\n    msg.notification = \"OPEN\";\n} else {\n    msg.notification = \"CLOSE\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1640,
        "wires": [
            [
                "8bd5e09b0be45338",
                "4aafaf849239412e"
            ]
        ]
    },
    {
        "id": "8bd5e09b0be45338",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "4f2da75b4445f277",
        "order": 5,
        "width": "3",
        "height": 1,
        "name": "DOOR STATE",
        "label": "",
        "format": "{{msg.notification}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 740,
        "y": 1700,
        "wires": []
    },
    {
        "id": "5e2a25d2756e97a5",
        "type": "ui_led",
        "z": "476a12a01ee6b415",
        "order": 6,
        "group": "4f2da75b4445f277",
        "width": "1",
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#505050",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "DOOR STATE",
        "x": 1100,
        "y": 1640,
        "wires": []
    },
    {
        "id": "46c03778028c52ec",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "DOOR STATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "doorState",
        "payloadType": "flow",
        "x": 200,
        "y": 1640,
        "wires": [
            [
                "b24b27c5ce435f89"
            ]
        ]
    },
    {
        "id": "53e602882b3ed4a5",
        "type": "ui_text",
        "z": "476a12a01ee6b415",
        "group": "4f2da75b4445f277",
        "order": 4,
        "width": "2",
        "height": "1",
        "name": "",
        "label": "DOOR",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 550,
        "y": 1700,
        "wires": []
    },
    {
        "id": "1ee945573419b1d6",
        "type": "trigger",
        "z": "476a12a01ee6b415",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 880,
        "y": 1620,
        "wires": [
            [
                "5e2a25d2756e97a5"
            ]
        ]
    },
    {
        "id": "4aafaf849239412e",
        "type": "switch",
        "z": "476a12a01ee6b415",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 1640,
        "wires": [
            [
                "1ee945573419b1d6"
            ],
            [
                "5e2a25d2756e97a5"
            ]
        ]
    },
    {
        "id": "40d96f8df198134b",
        "type": "e-mail",
        "z": "476a12a01ee6b415",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "20020741@vnu.edu.vn",
        "dname": "",
        "x": 700,
        "y": 1900,
        "wires": []
    },
    {
        "id": "37bca0214ed2210d",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Create email",
        "func": "msg = {\n    payload : '<!DOCTYPE html>\\\n<html>\\\n<head>\\\n<style>\\\n  .red-text {\\\n    color: red;\\\n  }\\\n</style>\\\n</head>\\\n<body>\\\n\\\n<h1 class=\"red-text\">THIEF DETECTED</h1>\\\n\\\n</body>\\\n</html>',\n    topic: \"HOME_AUTOMATION_SYSTEM\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1900,
        "wires": [
            [
                "40d96f8df198134b"
            ]
        ]
    },
    {
        "id": "c3bd3b7b3dc065fe",
        "type": "ui_toast",
        "z": "476a12a01ee6b415",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 2000,
        "wires": [
            [
                "5068ecdbf833f2fc"
            ]
        ]
    },
    {
        "id": "6623b41dd1e41050",
        "type": "mqtt in",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "security",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 70,
        "y": 1900,
        "wires": [
            [
                "ab15bcb5f35e17f4"
            ]
        ]
    },
    {
        "id": "ab15bcb5f35e17f4",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Check threaf signal",
        "func": "if(msg.payload == 'THREAF'){\n    msg.payload = 'stateMail';\n    msg.notification = 'THREAF DETECTED'\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1900,
        "wires": [
            [
                "37bca0214ed2210d",
                "fab396b31d44fff4",
                "e2e2022371bc2424"
            ]
        ]
    },
    {
        "id": "fab396b31d44fff4",
        "type": "mqtt out",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "ourdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 410,
        "y": 1820,
        "wires": []
    },
    {
        "id": "1d93e59783860270",
        "type": "ui_led",
        "z": "476a12a01ee6b415",
        "order": 5,
        "group": "d433431f2eeffbef",
        "width": 0,
        "height": 0,
        "label": "LOBBY LIGHT",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#505050",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "LOBBY LIGHT",
        "x": 500,
        "y": 1760,
        "wires": []
    },
    {
        "id": "397dbcd87ee955cb",
        "type": "mqtt in",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "realtime_status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1760,
        "wires": [
            [
                "982b376403e918b9",
                "20a11ed49e8e7eab"
            ]
        ]
    },
    {
        "id": "e2e2022371bc2424",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "Create notification",
        "func": "msg.payload = \"THREAF DETECTED\";\nmsg.topic = \"SECURITY\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2000,
        "wires": [
            [
                "c3bd3b7b3dc065fe"
            ]
        ]
    },
    {
        "id": "982b376403e918b9",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 47",
        "func": "flow.set(\"doorState\", msg.payload.doorState);\nflow.set(\"hallwayLightStatus\", msg.payload.hallwayLightStatus)\nmsg.payload = msg.payload.hallwayLightStatus;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1760,
        "wires": [
            [
                "1d93e59783860270"
            ]
        ]
    },
    {
        "id": "20a11ed49e8e7eab",
        "type": "debug",
        "z": "476a12a01ee6b415",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 200,
        "y": 1840,
        "wires": []
    },
    {
        "id": "adc599196fc48843",
        "type": "inject",
        "z": "476a12a01ee6b415",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "yardLightStatus",
        "payloadType": "flow",
        "x": 320,
        "y": 620,
        "wires": [
            [
                "da0509f968fddb92"
            ]
        ]
    },
    {
        "id": "c89fa3680f24d9ce",
        "type": "mqtt out",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "indoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 950,
        "y": 720,
        "wires": []
    },
    {
        "id": "5068ecdbf833f2fc",
        "type": "function",
        "z": "476a12a01ee6b415",
        "name": "function 49",
        "func": "msg.payload = \"OpenDoor\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2000,
        "wires": [
            [
                "ea15546770d56c1d"
            ]
        ]
    },
    {
        "id": "ea15546770d56c1d",
        "type": "mqtt out",
        "z": "476a12a01ee6b415",
        "name": "",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 1050,
        "y": 2000,
        "wires": []
    },
    {
        "id": "c9d918bd737c7df1",
        "type": "inject",
        "z": "f44abf5a8dec2d0a",
        "name": "Init folder",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "homeDataFoler",
        "payload": "/home/viet/IoT_data/",
        "payloadType": "str",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "e139221492892edb",
                "337f335a549d5d16"
            ]
        ]
    },
    {
        "id": "e139221492892edb",
        "type": "change",
        "z": "f44abf5a8dec2d0a",
        "name": "set to global value",
        "rules": [
            {
                "t": "set",
                "p": "folder",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "337f335a549d5d16",
        "type": "fs-file-lister",
        "z": "f44abf5a8dec2d0a",
        "name": "File explore",
        "start": "/home/viet/IoT_data/",
        "pattern": "*.*",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": true,
        "x": 450,
        "y": 120,
        "wires": [
            [
                "14f055ad78d2e445"
            ]
        ]
    },
    {
        "id": "14f055ad78d2e445",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "Get the list of file name",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i = 0; i < msg.payload.length; i++) {\n   msg.options.push(msg.payload[i].name);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "8d034c5e461283fa",
                "3252d806f5f84b2f"
            ]
        ]
    },
    {
        "id": "8d034c5e461283fa",
        "type": "ui_dropdown",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "label": "File selector",
        "tooltip": "",
        "place": "Select file",
        "group": "387c58da45e62fbf",
        "order": 1,
        "width": 16,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 910,
        "y": 120,
        "wires": [
            [
                "69e96dc3beb4697b"
            ]
        ]
    },
    {
        "id": "69e96dc3beb4697b",
        "type": "change",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fileSelected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "bc13e71d73e9b3f4"
            ]
        ]
    },
    {
        "id": "e388f6f614da18e9",
        "type": "ui_button",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "387c58da45e62fbf",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "Do you want to delete this file?",
        "payloadType": "str",
        "topic": "Delete confirmation",
        "topicType": "str",
        "x": 390,
        "y": 400,
        "wires": [
            [
                "b5e569624a36edc1"
            ]
        ]
    },
    {
        "id": "b5e569624a36edc1",
        "type": "ui_toast",
        "z": "f44abf5a8dec2d0a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "756d880e6bc3481b"
            ]
        ]
    },
    {
        "id": "756d880e6bc3481b",
        "type": "switch",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "8576d860bba00ca7"
            ]
        ]
    },
    {
        "id": "e2eef5cb9dfa9abc",
        "type": "file",
        "z": "f44abf5a8dec2d0a",
        "name": "Delete",
        "filename": "payload",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "337f335a549d5d16"
            ]
        ]
    },
    {
        "id": "8576d860bba00ca7",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "Get the filename to delete",
        "func": "msg.payload = flow.get(\"folder\") + flow.get(\"fileSelected\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 400,
        "wires": [
            [
                "e2eef5cb9dfa9abc"
            ]
        ]
    },
    {
        "id": "70ceb8613239da8b",
        "type": "comment",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "info": "Tạo 1 select box bằng html để lấy file thay vì\ndùng có sẵn của node-red\nDùng 1 node template để tạo nút bấm, \nbấm nút sẽ gửi lệnh vẽ biểu đồ",
        "x": 1580,
        "y": 140,
        "wires": []
    },
    {
        "id": "f3f1743b8c655d4f",
        "type": "ui_button",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "387c58da45e62fbf",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-line-chart",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 620,
        "wires": [
            [
                "5f01bb10575659de"
            ]
        ]
    },
    {
        "id": "8c7a532c236922e1",
        "type": "ui_chart",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "80d4c61b8d7e332f",
        "order": 1,
        "width": 6,
        "height": 6,
        "label": "℃",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": "24",
        "removeOlderPoints": "3000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "832b5d25f1b9f472",
        "type": "file in",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 400,
        "y": 620,
        "wires": [
            [
                "62f71d188d421468"
            ]
        ]
    },
    {
        "id": "62f71d188d421468",
        "type": "csv",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "timeStamp, temperature, humidity, power",
        "skip": "1",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 570,
        "y": 620,
        "wires": [
            [
                "ccefb89aa46f8fdf"
            ]
        ]
    },
    {
        "id": "ccefb89aa46f8fdf",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "graph generate",
        "func": "\nfunction toTimestamp(strDate) {\n  var datum = Date.parse(strDate);\n  return datum ;\n}\nvar payload = msg.payload;\nconst fileName = flow.get(\"fileSelected\");\nconst datePart = fileName.split(\".\")[0]; // Tách phần trước dấu chấm (phần ngày tháng năm)\nconst [day, month, year] = datePart.split(\"_\"); // Tách thành phần ngày, tháng, năm\n\nconst formattedDate = `${day}/${month}/${year}`;\nconst formattedDate2 = `${month}/${day}/${year}`;\nmsg.filename = formattedDate;\n\n\nvar temperature_out=[];\nvar humidity_out=[];\nvar power_out=[];\n\nvar temperature=[];\nvar humidity=[];\nvar power=[];\nvar energy = [];\nvar kWh = 0;\nvar sum_energy = 0;\nvar lastHours = 0;\n\nfor (let i = 0; i < payload.length; i++) {\n  var currentTime = payload[i][\"timeStamp\"];\n  // const currentTimeParts = currentTime.split(\":\");\n  const currentHours = parseInt(currentTime.slice(0, 2)) +1 ;\n  // if(currentHours < nextHours ){\n  if(currentHours > lastHours ){\n    var temp4 = { \"time\": lastHours, \"energy\": parseFloat((kWh/1000).toFixed(2)) };\n    energy.push(temp4);\n    sum_energy = sum_energy + kWh;\n    kWh = 0;\n    lastHours = currentHours;\n  }\n  //Calculate energy every hour\n  kWh = kWh + payload[i][\"power\"] * 5 * 60 / 3600; \n\n  var t = formattedDate2;\n  var timestamp = toTimestamp(t + \" \" + payload[i][\"timeStamp\"]);\n\n  var temp1 = { \"x\": timestamp, \"y\": payload[i][\"temperature\"] };\n  temperature.push(temp1);\n\n  var temp2 = { \"x\": timestamp, \"y\": payload[i][\"humidity\"] };\n  humidity.push(temp2);\n\n  var temp3 = { \"x\": timestamp, \"y\": payload[i][\"power\"] };\n  power.push(temp3);\n}\n\nvar data = {}\n\ntemperature_out=[temperature];\nhumidity_out=[humidity];\npower_out=[power];\n\ndata.temperature=[{\n\"series\": [\"Temperature\"],\n\"data\":temperature_out,\n\"labels\": [\"Tem\"]\n}];\n\ndata.humidity=[{\n\"series\": [\"Humidity\"],\n\"data\":humidity_out,\n\"labels\": [\"hum\"]\n}];\n\ndata.power=[{\n\"series\": [\"Power\"],\n\"data\":power_out,\n\"labels\": [\"pow\"]\n}];\n\ndata.energy = energy;\ndata.sum_energy = sum_energy;\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 620,
        "wires": [
            [
                "90e9249810cef4a3",
                "a1be6d78badacf07",
                "7747dfb48313cf06",
                "fd7679b440fe665d"
            ]
        ]
    },
    {
        "id": "5f01bb10575659de",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "function 5",
        "func": "msg.filename = flow.get(\"folder\") + flow.get(\"fileSelected\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 620,
        "wires": [
            [
                "832b5d25f1b9f472"
            ]
        ]
    },
    {
        "id": "9adbbb97f790f6fe",
        "type": "ui_button",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "387c58da45e62fbf",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "REFRESH",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "337f335a549d5d16"
            ]
        ]
    },
    {
        "id": "90e9249810cef4a3",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "temperature",
        "func": "msg.payload = msg.payload.temperature;\nmsg.topic = \"Temperature\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 560,
        "wires": [
            [
                "8c7a532c236922e1"
            ]
        ]
    },
    {
        "id": "a1be6d78badacf07",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "humidity",
        "func": "msg.payload = msg.payload.humidity;\nmsg.topic = \"Humidity\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 620,
        "wires": [
            [
                "69d342508a35c184"
            ]
        ]
    },
    {
        "id": "7747dfb48313cf06",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "power",
        "func": "msg.payload = msg.payload.power;\nmsg.topic = \"Power\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 680,
        "wires": [
            [
                "e68b81c0d0cb45d6"
            ]
        ]
    },
    {
        "id": "69d342508a35c184",
        "type": "ui_chart",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "330c74fd56fb8a42",
        "order": 1,
        "width": 6,
        "height": 6,
        "label": "%",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "24",
        "removeOlderPoints": "3000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "e68b81c0d0cb45d6",
        "type": "ui_chart",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "81a1a0f86dbd7ea7",
        "order": 1,
        "width": 6,
        "height": 6,
        "label": "mW",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "3000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "fd7679b440fe665d",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "energy",
        "func": "msg.sum = msg.payload.sum_energy;\nmsg.sum = 'Total: ' + (msg.sum / 1000).toFixed(2) + ' Wh ';\nmsg.payload = msg.payload.energy;\nmsg.topic = \"Energy\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 760,
        "wires": [
            [
                "0f1823e59892a5ba"
            ]
        ]
    },
    {
        "id": "d355033dd9f0b672",
        "type": "ui_chart",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "group": "a8efce5e22380e30",
        "order": 1,
        "width": 6,
        "height": 6,
        "label": "{{msg.sum}}",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "3000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1410,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "cd2efad2b94d01c2",
        "type": "change",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.energy",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 760,
        "wires": [
            [
                "d355033dd9f0b672"
            ]
        ]
    },
    {
        "id": "bc13e71d73e9b3f4",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "function 17",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 340,
        "wires": [
            [
                "8c7a532c236922e1",
                "69d342508a35c184",
                "e68b81c0d0cb45d6",
                "d355033dd9f0b672"
            ]
        ]
    },
    {
        "id": "0f1823e59892a5ba",
        "type": "split",
        "z": "f44abf5a8dec2d0a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1050,
        "y": 760,
        "wires": [
            [
                "cd2efad2b94d01c2"
            ]
        ]
    },
    {
        "id": "6f1e9a4af5aac80e",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "Get the file name to delete",
        "func": "msg.payload = flow.get(\"folder\") + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 180,
        "wires": [
            [
                "e2eef5cb9dfa9abc"
            ]
        ]
    },
    {
        "id": "3252d806f5f84b2f",
        "type": "function",
        "z": "f44abf5a8dec2d0a",
        "name": "Find the oldest record",
        "func": "var len = msg.options.length;\nvar day_array = [];\nif (len > 15){\n    for (var i = 0; i < len; i++){\n        const parts = (msg.options[i]).split(\"_\");\n        const numbers = parts.map(part => parseInt(part, 10)).filter(Number);\n        day_array.push(numbers[0] + (numbers[1]-1) * 31 + 365* (numbers[2] - 2020));\n    }\n    let minIndex = 0; // Giả sử phần tử đầu tiên là nhỏ nhất\n\n    for (let i = 1; i < len; i++) {\n        if (day_array[i] < day_array[minIndex]) {\n            minIndex = i; // Cập nhật vị trí của phần tử nhỏ nhất\n        }\n    }\n\n    msg.payload = msg.options[minIndex];\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 180,
        "wires": [
            [
                "6f1e9a4af5aac80e"
            ]
        ]
    },
    {
        "id": "298a509866f2b051",
        "type": "comment",
        "z": "f44abf5a8dec2d0a",
        "name": "Ý tưởng",
        "info": "Bỏ đoạn 100 lần mới lấy 1 lần\nParse time stamp để lấy phút, giây\nlấy thời điểm sau trừ thời điểm trước = duration time",
        "x": 420,
        "y": 920,
        "wires": []
    },
    {
        "id": "e9cc43d704bf60a2",
        "type": "ui_form",
        "z": "675b79776999a17a",
        "name": "",
        "label": "",
        "group": "f5695f99a4099ee6",
        "order": 1,
        "width": "6",
        "height": 3,
        "options": [
            {
                "label": "User Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": ""
        },
        "payload": "",
        "submit": "SUBMIT",
        "cancel": "CANCEL",
        "topic": "detect",
        "topicType": "str",
        "splitLayout": "",
        "className": "",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "d2447c58008b9764"
            ]
        ]
    },
    {
        "id": "08b1650a0b38f4c9",
        "type": "mqtt out",
        "z": "675b79776999a17a",
        "name": "",
        "topic": "kook",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 1090,
        "y": 400,
        "wires": []
    },
    {
        "id": "d2447c58008b9764",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "add new user",
        "func": "const listName = flow.get(\"listName\");\nif(listName.includes(msg.payload.name)){\n    msg.error = true;\n} else{\n    msg.error = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "741ebb652ec971c0",
                "9666f081e114ba06",
                "2c66e92d5c8a28bf"
            ]
        ]
    },
    {
        "id": "32c5c4dd17f56686",
        "type": "ui_dropdown",
        "z": "675b79776999a17a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select user name",
        "group": "a7dd80de0bea1a1f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 610,
        "y": 580,
        "wires": [
            [
                "e18be4c956db619d"
            ]
        ]
    },
    {
        "id": "e18be4c956db619d",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "Get the name to delete",
        "func": "flow.set(\"nameToDelete\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "7e4f1c0db1e8e720",
        "type": "ui_button",
        "z": "675b79776999a17a",
        "name": "",
        "group": "a7dd80de0bea1a1f",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "Do you want to delete this user?",
        "payloadType": "str",
        "topic": "Delete user confirmation",
        "topicType": "str",
        "x": 70,
        "y": 720,
        "wires": [
            [
                "fd3adcec6cbee83d"
            ]
        ]
    },
    {
        "id": "fd3adcec6cbee83d",
        "type": "ui_toast",
        "z": "675b79776999a17a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "YES",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 310,
        "y": 720,
        "wires": [
            [
                "24052cc50952cd6b"
            ]
        ]
    },
    {
        "id": "24052cc50952cd6b",
        "type": "switch",
        "z": "675b79776999a17a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "YES",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 720,
        "wires": [
            [
                "97ac781fa855f5ac"
            ]
        ]
    },
    {
        "id": "b1e9f3c8d174a976",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "Delete user",
        "func": "var listName = flow.get('listName');\nconst index = listName.indexOf(flow.get(\"nameToDelete\"));\n\nif (index !== -1) {\n    listName.splice(index, 1); // Xóa 1 phần tử tại vị trí index\n}\nmsg.payload = listName.join(\",\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 720,
        "wires": [
            [
                "a0b24f0f47921876"
            ]
        ]
    },
    {
        "id": "5a3f803813567105",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "Get list name",
        "func": "msg.options = flow.get(\"listName\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 580,
        "wires": [
            [
                "32c5c4dd17f56686"
            ]
        ]
    },
    {
        "id": "90762313d50604fd",
        "type": "ui_toast",
        "z": "675b79776999a17a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Error",
        "name": "",
        "x": 1070,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "741ebb652ec971c0",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "Create error mesage",
        "func": "if(msg.error){\n    msg.payload = \"This name already exists\";\n    msg.topic = \"Error\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "90762313d50604fd"
            ]
        ]
    },
    {
        "id": "9666f081e114ba06",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "send add user command",
        "func": "if(!msg.error){\n    msg.payload = 'ADD:' + msg.payload.name;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "08b1650a0b38f4c9"
            ]
        ]
    },
    {
        "id": "97ac781fa855f5ac",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "Send delete user command",
        "func": "msg.payload = 'DELETE:' +flow.get(\"nameToDelete\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 720,
        "wires": [
            [
                "b1e9f3c8d174a976",
                "08b1650a0b38f4c9"
            ]
        ]
    },
    {
        "id": "f108d7d0493d68f4",
        "type": "mqtt out",
        "z": "675b79776999a17a",
        "name": "",
        "topic": "kook",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 730,
        "y": 820,
        "wires": []
    },
    {
        "id": "022463bb1dfff053",
        "type": "mqtt in",
        "z": "675b79776999a17a",
        "name": "",
        "topic": "kookdump",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "2ea19132b7771469",
                "9ce269d9d453a895"
            ]
        ]
    },
    {
        "id": "3fd3c715211cdd7f",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "copy list of usernames to the global array",
        "func": "var inputString = msg.payload;\n//Delete line break character\ninputString = inputString.replace(/\\n/g, \"\");\n//Split String to username array\nconst names = (inputString).split(\",\");\nflow.set(\"listName\", names);\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 480,
        "wires": [
            [
                "5a3f803813567105"
            ]
        ]
    },
    {
        "id": "17810248efaa79f4",
        "type": "file in",
        "z": "675b79776999a17a",
        "name": "read list of username from file",
        "filename": "/home/viet/username/test.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "3fd3c715211cdd7f"
            ]
        ]
    },
    {
        "id": "372a67f76d3a0e7f",
        "type": "inject",
        "z": "675b79776999a17a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "17810248efaa79f4"
            ]
        ]
    },
    {
        "id": "2c66e92d5c8a28bf",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "Update the list",
        "func": "if(!msg.error){\n    var listName = flow.get(\"listName\");\n    listName.push(msg.payload.name);\n    msg.payload = listName.join(\",\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 440,
        "wires": [
            [
                "a0b24f0f47921876"
            ]
        ]
    },
    {
        "id": "a0b24f0f47921876",
        "type": "file",
        "z": "675b79776999a17a",
        "name": "",
        "filename": "/home/viet/username/test.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1220,
        "y": 560,
        "wires": [
            [
                "17810248efaa79f4"
            ]
        ]
    },
    {
        "id": "2ea19132b7771469",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "function 43",
        "func": "const listName = flow.get(\"listName\");\nif(listName.includes(msg.payload)){\n    msg.payload = \"OpenDoor\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1020,
        "wires": [
            [
                "240490cc048dd7c6"
            ]
        ]
    },
    {
        "id": "240490cc048dd7c6",
        "type": "mqtt out",
        "z": "675b79776999a17a",
        "name": "Send open door command",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 600,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4bfe51b18082fac0",
        "type": "mqtt in",
        "z": "675b79776999a17a",
        "name": "",
        "topic": "recognize",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 860,
        "wires": [
            [
                "2b320d91c093d22b"
            ]
        ]
    },
    {
        "id": "2b320d91c093d22b",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "function 45",
        "func": "if(msg.payload == \"DETECT\"){\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 860,
        "wires": [
            [
                "f108d7d0493d68f4"
            ]
        ]
    },
    {
        "id": "795a34d00cea02c2",
        "type": "inject",
        "z": "675b79776999a17a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OpenDoor",
        "payloadType": "str",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "240490cc048dd7c6"
            ]
        ]
    },
    {
        "id": "9ce269d9d453a895",
        "type": "function",
        "z": "675b79776999a17a",
        "name": "function 48",
        "func": "if (msg.payload == \"Add done\"){\n    msg.payload = \"DONE!\";\n    msg.topic = \"ADD USER\";\n    return msg;\n} else if (msg.payload == \"unknow\"){\n    msg.payload = \"FAIL\";\n    msg.topic = \"RECOGNITION\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "81f67b77b525a214"
            ]
        ]
    },
    {
        "id": "81f67b77b525a214",
        "type": "ui_toast",
        "z": "675b79776999a17a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 530,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "43a62c5cd6382c8c",
        "type": "mqtt in",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "esp32/data",
        "qos": "2",
        "datatype": "auto",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 540,
        "wires": [
            [
                "424a64e725daa3d3"
            ]
        ]
    },
    {
        "id": "424a64e725daa3d3",
        "type": "debug",
        "z": "7a58303c52d57c05",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 580,
        "wires": []
    },
    {
        "id": "14b2404caa0176cb",
        "type": "inject",
        "z": "7a58303c52d57c05",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "1336b3f607618296"
            ]
        ]
    },
    {
        "id": "1336b3f607618296",
        "type": "function",
        "z": "7a58303c52d57c05",
        "name": "function 23",
        "func": "msg.payload = \"ON_warning\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            [
                "49d2f1752f830b5a"
            ]
        ]
    },
    {
        "id": "8144abe519238758",
        "type": "inject",
        "z": "7a58303c52d57c05",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "e9a501cfeee39990"
            ]
        ]
    },
    {
        "id": "e9a501cfeee39990",
        "type": "function",
        "z": "7a58303c52d57c05",
        "name": "function 24",
        "func": "msg.payload = \"OFF_warning\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 380,
        "wires": [
            [
                "140ef72810a371fc"
            ]
        ]
    },
    {
        "id": "51b3d98a0269f66c",
        "type": "function",
        "z": "7a58303c52d57c05",
        "name": "function 25",
        "func": "if (msg.payload === true)\nmsg.payload = \"OnRelay2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 660,
        "wires": [
            [
                "ac47b8115e831db1"
            ]
        ]
    },
    {
        "id": "ac47b8115e831db1",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "esp32/doAn1/control",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 760,
        "y": 660,
        "wires": []
    },
    {
        "id": "22fe5327bb5fc593",
        "type": "function",
        "z": "7a58303c52d57c05",
        "name": "function 26",
        "func": "if (msg.payload === false)\n    msg.payload = \"OffRelay2\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 740,
        "wires": [
            [
                "80e75d1b0b108aa6"
            ]
        ]
    },
    {
        "id": "80e75d1b0b108aa6",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "esp32/doAn1/control",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 760,
        "y": 740,
        "wires": []
    },
    {
        "id": "24d23cf90cadd7c9",
        "type": "ui_switch",
        "z": "7a58303c52d57c05",
        "name": "",
        "label": "switch2",
        "tooltip": "",
        "group": "31bd30d4face3e7e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "51b3d98a0269f66c",
                "22fe5327bb5fc593",
                "0415893f67325bc0"
            ]
        ]
    },
    {
        "id": "0415893f67325bc0",
        "type": "debug",
        "z": "7a58303c52d57c05",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 840,
        "wires": []
    },
    {
        "id": "e0cce61c7596a1c0",
        "type": "function",
        "z": "7a58303c52d57c05",
        "name": "function 27",
        "func": "if (msg.payload === true)\nmsg.payload = \"OnRelay1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 920,
        "wires": [
            [
                "f5617aef4f87da38"
            ]
        ]
    },
    {
        "id": "f5617aef4f87da38",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "esp32/doAn1/control",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 780,
        "y": 920,
        "wires": []
    },
    {
        "id": "87c711511645fd87",
        "type": "function",
        "z": "7a58303c52d57c05",
        "name": "function 28",
        "func": "if (msg.payload === false)\n    msg.payload = \"OffRelay1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1000,
        "wires": [
            [
                "2ba6453951bfe736"
            ]
        ]
    },
    {
        "id": "2ba6453951bfe736",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "esp32/doAn1/control",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 780,
        "y": 1000,
        "wires": []
    },
    {
        "id": "3cf0128d076d42f9",
        "type": "ui_switch",
        "z": "7a58303c52d57c05",
        "name": "",
        "label": "switch1",
        "tooltip": "",
        "group": "31bd30d4face3e7e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "e0cce61c7596a1c0",
                "87c711511645fd87",
                "4b1b8bdb92395197"
            ]
        ]
    },
    {
        "id": "4b1b8bdb92395197",
        "type": "debug",
        "z": "7a58303c52d57c05",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1100,
        "wires": []
    },
    {
        "id": "49d2f1752f830b5a",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "140ef72810a371fc",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "8192643d09bd6ff9",
        "type": "inject",
        "z": "7a58303c52d57c05",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "4f8945bdebf30b59"
            ]
        ]
    },
    {
        "id": "4f8945bdebf30b59",
        "type": "mqtt out",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "kook",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "ea5f3bb12ad80fec",
        "type": "mqtt in",
        "z": "7a58303c52d57c05",
        "name": "",
        "topic": "Test_T",
        "qos": "2",
        "datatype": "auto",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "93341144f74132e3"
            ]
        ]
    },
    {
        "id": "93341144f74132e3",
        "type": "debug",
        "z": "7a58303c52d57c05",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 160,
        "wires": []
    },
    {
        "id": "45a925d1cdf92cb0",
        "type": "mqtt in",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "2",
        "datatype": "auto",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "058ecea4324fe3b4"
            ]
        ]
    },
    {
        "id": "058ecea4324fe3b4",
        "type": "debug",
        "z": "2c4429803f3685c6",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 280,
        "wires": []
    },
    {
        "id": "62b30e275c539f53",
        "type": "mqtt out",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "ec7aecb1d3d3b96b",
        "type": "function",
        "z": "2c4429803f3685c6",
        "name": "function 36",
        "func": "msg.payload = \"OpenDoor\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 520,
        "wires": [
            [
                "62b30e275c539f53"
            ]
        ]
    },
    {
        "id": "359767809698abae",
        "type": "mqtt out",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 630,
        "y": 600,
        "wires": []
    },
    {
        "id": "e43dc7d03a0ace12",
        "type": "function",
        "z": "2c4429803f3685c6",
        "name": "function 37",
        "func": "msg.payload = \"OpenClose\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 600,
        "wires": [
            [
                "359767809698abae"
            ]
        ]
    },
    {
        "id": "efe4f9ac984f09c2",
        "type": "inject",
        "z": "2c4429803f3685c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "e43dc7d03a0ace12"
            ]
        ]
    },
    {
        "id": "357bce1962598977",
        "type": "mqtt out",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 610,
        "y": 700,
        "wires": []
    },
    {
        "id": "d45f40dd018ad49b",
        "type": "function",
        "z": "2c4429803f3685c6",
        "name": "Sercurity On",
        "func": "msg.payload = \"SercurityON\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 700,
        "wires": [
            [
                "357bce1962598977"
            ]
        ]
    },
    {
        "id": "add9864c9ac61eb2",
        "type": "inject",
        "z": "2c4429803f3685c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 700,
        "wires": [
            [
                "d45f40dd018ad49b"
            ]
        ]
    },
    {
        "id": "9fa816f6f59f0891",
        "type": "mqtt out",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "outdoor_sub",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 590,
        "y": 760,
        "wires": []
    },
    {
        "id": "670e440333b02273",
        "type": "function",
        "z": "2c4429803f3685c6",
        "name": "SercurityOff",
        "func": "msg.payload = \"SercurityOFF\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 760,
        "wires": [
            [
                "9fa816f6f59f0891"
            ]
        ]
    },
    {
        "id": "4c4fde1a23726780",
        "type": "inject",
        "z": "2c4429803f3685c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 760,
        "wires": [
            [
                "670e440333b02273"
            ]
        ]
    },
    {
        "id": "b264f7a81376dc0e",
        "type": "mqtt out",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "OutDoorControl",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 620,
        "y": 860,
        "wires": []
    },
    {
        "id": "4dfcc81b7ad843ba",
        "type": "function",
        "z": "2c4429803f3685c6",
        "name": "function 39",
        "func": "msg.payload = \"SercurityOFF\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 860,
        "wires": [
            [
                "b264f7a81376dc0e"
            ]
        ]
    },
    {
        "id": "2a801f8d1e2482d4",
        "type": "inject",
        "z": "2c4429803f3685c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "4dfcc81b7ad843ba"
            ]
        ]
    },
    {
        "id": "b8dc508920ccedd4",
        "type": "mqtt out",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "OutDoorControl",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "26bb56a265ba606e",
        "x": 600,
        "y": 940,
        "wires": []
    },
    {
        "id": "03da17ad2456a810",
        "type": "function",
        "z": "2c4429803f3685c6",
        "name": "function 40",
        "func": "msg.payload = \"SercurityON\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 940,
        "wires": [
            [
                "b8dc508920ccedd4"
            ]
        ]
    },
    {
        "id": "8ffc82d0eac6458c",
        "type": "inject",
        "z": "2c4429803f3685c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "03da17ad2456a810"
            ]
        ]
    },
    {
        "id": "51ee27e3f298861f",
        "type": "mqtt in",
        "z": "2c4429803f3685c6",
        "name": "",
        "topic": "sercurity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "26bb56a265ba606e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "5326d7ce1916ed51"
            ]
        ]
    },
    {
        "id": "5326d7ce1916ed51",
        "type": "debug",
        "z": "2c4429803f3685c6",
        "name": "debug 65",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "c71ed4dce13878b3",
        "type": "inject",
        "z": "2c4429803f3685c6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "ec7aecb1d3d3b96b"
            ]
        ]
    }
]